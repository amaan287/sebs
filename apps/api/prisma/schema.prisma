generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
  extensions      = [postgis]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VenueType {
  CAFE
  BAR
  CLUB
  ROOFTOP
}

enum MusicGenre {
  TECHNO
  HOUSE
  JAZZ
  HIPHOP
  ROCK
  POP
  CLASSICAL
  OTHER
}

model User {
  id        String @id @default(uuid())
  email     String @unique
  firstName String
  lastName  String
  password  String

  admin        Boolean @default(false)
  premium_user Boolean @default(false)

  phone          String?
  profilePicture String?

  location    String?
  latitude    String?
  longitude   String?
  // Relationships
  ownedVenues Venue[]    @relation("VenueOwner")
  favorites   Favorite[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Venue {
  id   String    @id @default(uuid())
  name String
  type VenueType

  city       String
  country    String
  postalCode String?

  description String?
  phoneNumber String?
  websiteUrl  String?

  location  String?
  address   String?
  latitude  Float?
  longitude Float?
  mapLink   String?

  openingTime DateTime?
  closingTime DateTime?
  isActive    Boolean   @default(true)

  owner     User       @relation("VenueOwner", fields: [ownerId], references: [id])
  ownerId   String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Favorite  Favorite[]
  Event     Event[]
}

// Many-to-Many Join Table for Favorites
model Favorite {
  id      String @id @default(uuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  venue   Venue  @relation(fields: [venueId], references: [id])
  venueId String

  createdAt DateTime @default(now())
}

model Event {
  id        String     @id @default(uuid())
  name      String
  date      DateTime
  genre     MusicGenre
  venue     Venue      @relation(fields: [venueId], references: [id])
  venueId   String
  Performer String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}
